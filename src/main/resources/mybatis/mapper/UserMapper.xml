<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.dzlin.oauth2.admin.mapper.UserMapper">

    <sql id="baseColumns">
        id, username, password, enabled, account_expired, account_locked, credentials_expired
    </sql>

    <resultMap id="userMap" type="User">
        <result column="account_expired" property="accountExpired"/>
        <result column="account_locked" property="accountLocked"/>
        <result column="credentials_expired" property="credentialsExpired"/>
    </resultMap>

    <select id="findByUsername" parameterType="String" resultMap="userMap">
        select
        <include refid="baseColumns"/>
        from user
        where username = #{username}
    </select>

    <insert id="add" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="User">
        insert into user (username, password, enabled, account_expired, account_locked, credentials_expired)
        values (#{username}, #{password}, 1, 0, 0, 0)
    </insert>

    <select id="findById" parameterType="Long" resultMap="userMap">
        select
        <include refid="baseColumns"/>
        from user
        where id = #{id}
    </select>

    <insert id="grantAuthority" parameterType="HashMap">
        insert into user_authority (user_id, authority_id) values
        <foreach collection="authority_ids" separator="," item="authority_id">
            (#{user_id}, #{authority_id})
        </foreach>
    </insert>

</mapper>